# secrets.GPG_PASSPHRASE
#
# secrets.PROD_ENV
# secrets.PROD_BACKEND_ENV
#
# secrets.PROJECT_NAME
# secrets.IMAGE_NAME
#
# secrets.REGISTRY_URI
# secrets.REGISTRY_USER
# secrets.REGISTRY_PASS
#
# secrets.DOCKER_SSH_HOST
# secrets.DOCKER_SSH_PRIVATE_KEY
# secrets.DOCKER_SSH_PUBLIC_KEY

name: Prod

on:
  release:
    types:
      - published

jobs:
  build:
    name: Build
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Login to Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.REGISTRY_URI }}
          username: ${{ secrets.REGISTRY_USER }}
          password: ${{ secrets.REGISTRY_PASS }}

      - name: Extract Docker meta
        id: metadata
        uses: docker/metadata-action@v4
        with:
          images: ${{ secrets.REGISTRY_URI }}/${{ secrets.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}},priority=900
            type=semver,pattern={{major}}.{{minor}},priority=900
            type=ref,event=branch,priority=600
            type=ref,event=pr,priority=600
            type=sha,format=long,prefix=,priority=100

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          file: Dockerfile
          tags: ${{ steps.metadata.outputs.tags }}
          push: true

  create-deployment-artifact:
    name: Create deployment artifact
    runs-on: ubuntu-20.04
    needs:
      - build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Extract environment variables
        run: |
          echo ${{ secrets.PROD_ENV }} > .ci-cd/prod/.env.gpg.b64
          echo ${{ secrets.PROD_BACKEND_ENV }} > .ci-cd/prod/.env.backend.gpg.b64

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: deployment-artifact
          path: .ci-cd/prod

  deploy:
    name: Deploy
    runs-on: ubuntu-20.04
    needs:
      - build
      - create-deployment-artifact
    steps:
      - name: Download deployment artifact
        uses: actions/download-artifact@v3
        with:
          name: deployment-artifact

      - name: Decrypt environment variables
        run: |
          base64 -d .env.gpg.b64 > .env.gpg
          gpg --quiet --batch --yes --decrypt \
              --passphrase=${{ secrets.GPG_PASSPHRASE }} \
              --output .env .env.gpg
          base64 -d .env.backend.gpg.b64 > .env.backend.gpg
          gpg --quiet --batch --yes --decrypt \
              --passphrase=${{ secrets.GPG_PASSPHRASE }} \
              --output .env.backend .env.backend.gpg

      - name: Deploy
        uses: sulthonzh/docker-remote-deployment-action@v0.1.2-beta
        env:
          IMAGE: ${{ secrets.REGISTRY_URI }}/${{ secrets.IMAGE_NAME }}:${{ github.sha }}
        with:
          remote_docker_host: ${{ secrets.DOCKER_SSH_HOST }}
          ssh_private_key: ${{ secrets.DOCKER_SSH_PRIVATE_KEY }}
          ssh_public_key: ${{ secrets.DOCKER_SSH_PUBLIC_KEY }}
          docker_registry_uri: ${{ secrets.REGISTRY_URI }}
          docker_registry_username: ${{ secrets.REGISTRY_USER }}
          docker_registry_password: ${{ secrets.REGISTRY_PASS }}
          deployment_mode: docker-compose
          copy_stack_file: false
          stack_file_name: docker-compose.yaml
          pull_images_first: true
          args: -p ${{ secrets.PROJECT_NAME }} up -d
